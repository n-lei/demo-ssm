<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 组件扫描 -->
    <context:component-scan base-package="user,system">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--<context:annotation-config />-->

    <!-- 数据源 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 基于注解使用事务 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <!--spring整合mybatis -->
    <!--1、SqlSessin对象的创建管理 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!--mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!--扫描mybatis配置sql的xml文件-->
        <property name="mapperLocations" value="classpath:sqlMap/**/*.xml" />
    </bean>

    <!-- 扫描所有的mapper接口的实现，让这些mapper能够自动注入；
	     base-package：指定mapper接口的包名
	-->
    <mybatis-spring:scan base-package="**.dao"/>

    <!--2、Mapper接口代理实现类对象的创建管理-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="system.dao,user.dao"></property>
    </bean>-->

    <!-- springContext 获取Bean工具类-->
    <bean class="nl.spring.util.SpringBeanUtil" lazy-init="false" />

</beans>